import os
import asyncio
import logging
import threading
from flask import Flask
from aiogram import Bot, Dispatcher
from aiogram.exceptions import TelegramAPIError

from database import init_database
from handlers.admin import register_admin_handlers
from handlers.user import register_user_handlers
from handlers.registration import register_registration_handlers
from handlers.common import register_common_handlers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN', '1336636056:AAHpYh17e4ov13-fADHi1sqi-3XJMxqyX7k')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

user_last_messages = {}  # –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å {user_id: [message_ids]}

# === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ê–î–ú–ò–ù–ê ===
ADMIN_IDS = [918896676, 966722525]

def is_admin(user_id: int) -> bool:
    return user_id in ADMIN_IDS

# –°–æ–∑–¥–∞–µ–º Flask app –¥–ª—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is alive!"

def run_flask():
    app.run(host='0.0.0.0', port=8080)

async def main():
    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_database()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    register_admin_handlers(dp, bot, user_last_messages, is_admin)
    register_user_handlers(dp, bot, user_last_messages)
    register_registration_handlers(dp, bot, user_last_messages)
    register_common_handlers(dp, bot, user_last_messages, is_admin)

    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.daemon = True
    flask_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())